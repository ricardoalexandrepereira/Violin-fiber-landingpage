/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 scene.gltf
Author: Ethan Savage (https://sketchfab.com/Ethan_Savage)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stradivari-violin-ab3ea86bb5f945c89889c1d333f55c0d
Title: Stradivari Violin
*/

import React, { useRef,useLayoutEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import gsap from "gsap"
import { useThree } from '@react-three/fiber'

export function Model(props) {

  const group = useRef()
  const { nodes, materials } = useGLTF('/scene.gltf')

  let camera = useThree(state => state.camera);
  let scene = useThree(state => state.scene);

useLayoutEffect(() =>{

  camera.position.set(0,0,300)
  

  let t1 = gsap.timeline({
    scrollTrigger:{
      trigger:"#phone-model",
      start:"top+=300 top",
      endTrigger:"#battery",
      scrub:true,
      end:"top top",
      
      
    }
    
  })

  t1.fromTo(camera.position, {y:80}, {y:10})
  .to(scene.rotation, {y:5})
  .to(scene.rotation, {y:7})
  .to(scene.rotation, {z:1.58},"key1")
  .to(scene.position, {z:100, x:0,y:0},"key1")
  .to(scene.position, {z:1,x:40},"key2")
  .to(scene.rotation, {y:0, z:0},"key2")
  .to(scene.position, {z:1, x:-40})
  .to(scene.position, {z:30, x:-40})
  .to(scene.rotation, {z:0, y:6.3})
  .to(scene.position, {x:-40, y:0, z:2})


},[scene])

  return (
    <group useRef={group} {...props} dispose={null}>
      
      <group position={[0, 0.79, 3.98]} rotation={[-2.05, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_7.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_8.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_10.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_11.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_12.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_13.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_14.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_15.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_16.geometry} material={materials.aiStandardSurface2SG} />
        <mesh geometry={nodes.Object_17.geometry} material={materials.aiStandardSurface2SG} />
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
